@import '_elements-mixins.sass'

// Elements

// Bubble

.leto-bubble
    +elementConstructor('bubble')
        +bubble($standardSize)
    
    &-xxs
        +elementConstructor('bubble')
            +bubble($xxs)

    &-xs
        +elementConstructor('bubble')
            +bubble($xs)

    &-sm
        +elementConstructor('bubble')
            +bubble($sm)

    &-md
        +elementConstructor('bubble')
            +bubble($md)

    &-lg
        +elementConstructor('bubble')
            +bubble($lg)

    &-xl
        +elementConstructor('bubble')
            +bubble($xl)

    &-xxl
        +elementConstructor('bubble')
            +bubble($xxl)

    +presetConstructor('bubble')

// Bubble wrapper

.leto-bubble-wrapper
    +bubbleWrapper($md)

    &-xxs
        +bubbleWrapper($xxs)
        
    &-xs
        +bubbleWrapper($xs)

    &-sm
        +bubbleWrapper($sm)

    &-md
        +bubbleWrapper($md)
        
    &-lg
        +bubbleWrapper($lg)

    &-xl
        +bubbleWrapper($xl)

    &-xxl
        +bubbleWrapper($xxl)


// Card

.leto-card
    +elementConstructor('card')
        +cardAutoWidth()

    &-xxs    
        +elementConstructor('card')
            +card($xxs)

    &-xs
        +elementConstructor('card')
            +card($xs)

    &-sm
        +elementConstructor('card')
            +card($sm) 

    &-md
        +elementConstructor('card')
            +card($md)

    &-lg
        +elementConstructor('card')
            +card($lg)

    &-xl
        +elementConstructor('card')
            +card($xl)

    &-xxl
        +elementConstructor('card')
            +card($xxl) 

    &-square
        +elementConstructor('card') 
            +cardSquare($md)

        &-xxs      
            +elementConstructor('card')  
                +cardSquare($xxs)

        &-xs
            +elementConstructor('card')  
                +cardSquare($xs)

        &-sm
            +elementConstructor('card')  
                +cardSquare($sm)

        &-md
            +elementConstructor('card')  
                +cardSquare($md)

        &-lg
            +elementConstructor('card')  
                +cardSquare($lg)

        &-xl
            +elementConstructor('card')  
                +cardSquare($xl)

        &-xxl
            +elementConstructor('card')  
                +cardSquare($xxl) 

    +presetConstructor('card')

// Card wrapper

.leto-card-wrapper
    +cardWrapper($md)


// Button

.leto-button 
    +elementConstructor('button')
        +button($standardSize)

    &-xxs
        +elementConstructor('button')
            +button($xxs)

    &-xs
        +elementConstructor('button')
            +button($xs)

    &-sm
        +elementConstructor('button')
            +button($sm)

    &-md
        +elementConstructor('button')
            +button($md)

    &-lg
        +elementConstructor('button')
            +button($lg)

    &-xl
        +elementConstructor('button')
            +button($xl)

    &-xxl
        +elementConstructor('button')
            +button($xxl)

    &-full
        +elementConstructor('button')
            +buttonFull($standardSize)

        &-xxs
            +elementConstructor('button')
                +buttonFull($xxs)

        &-xs
            +elementConstructor('button')
                +buttonFull($xs)

        &-sm
            +elementConstructor('button')
                +buttonFull($sm)

        &-md
            +elementConstructor('button')
                +buttonFull($md)

        &-lg
            +elementConstructor('button')
                +buttonFull($lg)

        &-xl
            +elementConstructor('button')
                +buttonFull($xl)

        &-xxl
            +elementConstructor('button')
                +buttonFull($xxl)

    +presetConstructor('button')

// Badge

.leto-badge
    +elementConstructor('badge')
        +badge($standardSize)

    &-xxs
        +elementConstructor('badge')
            +badge($xxs)

    &-xs
        +elementConstructor('badge')
            +badge($xs)

    &-sm
        +elementConstructor('badge')
            +badge($sm)

    &-md
        +elementConstructor('badge')
            +badge($sm)

    &-lg
        +elementConstructor('badge')
            +badge($lg)

    &-xl
        +elementConstructor('badge')
            +badge($xl)

    &-xxl
        +elementConstructor('badge')
            +badge($xxl)

    +presetConstructor('badge')

// Input

.leto-input

    &[type="text"], &[type="date"], &[type="datetime-local"], &[type="email"], &[type="month"], &[type="number"], &[type="password"], &[type="tel"], &[type="time"], &[type="url"], &[type="week"]
        +elementConstructor('input')
            +input($standardSize)

    &-xxs[type="text"], &-xxs[type="date"], &-xxs[type="datetime-local"], &-xxs[type="email"], &-xxs[type="month"], &-xxs[type="number"], &-xxs[type="password"], &-xxs[type="tel"], &-xxs[type="time"], &-xxs[type="url"], &-xxs[type="week"]
        +elementConstructor('input')
            +input($xxs)

    &-xs[type="text"], &-xs[type="date"], &-xs[type="datetime-local"], &-xs[type="email"], &-xs[type="month"], &-xs[type="number"], &-xs[type="password"], &-xs[type="tel"], &-xs[type="time"], &-xs[type="url"], &-xs[type="week"]
        +elementConstructor('input')
            +input($xs)

    &-sm[type="text"], &-sm[type="date"], &-sm[type="datetime-local"], &-sm[type="email"], &-sm[type="month"], &-sm[type="number"], &-sm[type="password"], &-sm[type="tel"], &-sm[type="time"], &-sm[type="url"], &-sm[type="week"]
        +elementConstructor('input')
            +input($sm)

    &-md[type="text"], &-md[type="date"], &-md[type="datetime-local"], &-md[type="email"], &-md[type="month"], &-md[type="number"], &-md[type="password"], &-md[type="tel"], &-md[type="time"], &-md[type="url"], &-md[type="week"]
        +elementConstructor('input')
            +input($md)

    &-lg[type="text"], &-lg[type="date"], &-lg[type="datetime-local"], &-lg[type="email"], &-lg[type="month"], &-lg[type="number"], &-lg[type="password"], &-lg[type="tel"], &-lg[type="time"], &-lg[type="url"], &-lg[type="week"]
        +elementConstructor('input')
            +input($lg)

    &-xl[type="text"], &-xl[type="date"], &-xl[type="datetime-local"], &-xl[type="email"], &-xl[type="month"], &-xl[type="number"], &-xl[type="password"], &-xl[type="tel"], &-xl[type="time"], &-xl[type="url"], &-xl[type="week"]
        +elementConstructor('input')
            +input($xl)

    &-xxl[type="text"], &-xxl[type="date"], &-xxl[type="datetime-local"], &-xxl[type="email"], &-xxl[type="month"], &-xxl[type="number"], &-xxl[type="password"], &-xxl[type="tel"], &-xxl[type="time"], &-xxl[type="url"], &-xxl[type="week"]
        +elementConstructor('input')
            +input($xxl)

    &[type="text"], &[type="date"], &[type="datetime-local"], &[type="email"], &[type="month"], &[type="number"], &[type="password"], &[type="tel"], &[type="time"], &[type="url"], &[type="week"]
        +presetConstructor('input')

// Input Wrapper

.leto-input-wrapper
    +inputWrapper()


// Input Radio

.leto-input

    &[type="radio"]
        +inputRadio($standardSize)

    &-xxs[type="radio"]
        +inputRadio($xxs)

    &-xs[type="radio"]
        +inputRadio($xs)

    &-sm[type="radio"]
        +inputRadio($sm)

    &-md[type="radio"]
        +inputRadio($md)

    &-lg[type="radio"]
        +inputRadio($lg)

    &-xl[type="radio"]
        +inputRadio($xl)

    &-xxl[type="radio"]
        +inputRadio($xxl)


// Input Checkbox

.leto-input

    &[type="checkbox"]
        +inputCheckbox($standardSize)

    &-xxs[type="checkbox"]
        +inputCheckbox($xxs)

    &-xs[type="checkbox"]
        +inputCheckbox($xs)

    &-sm[type="checkbox"]
        +inputCheckbox($sm)

    &-md[type="checkbox"]
        +inputCheckbox($md)

    &-lg[type="checkbox"]
        +inputCheckbox($lg)

    &-xl[type="checkbox"]
        +inputCheckbox($xl)

    &-xxl[type="checkbox"]
        +inputCheckbox($xxl)


// Input Color

.leto-input

    &[type="color"]
        +elementConstructor('input')
            +inputColor($standardSize)

    &-xxs[type="color"]
        +elementConstructor('input')
            +inputColor($xxs)

    &-xs[type="color"]
        +elementConstructor('input')
            +inputColor($xs)

    &-sm[type="color"]
        +elementConstructor('input')
            +inputColor($sm)

    &-md[type="color"]
        +elementConstructor('input')
            +inputColor($md)

    &-lg[type="color"]
        +elementConstructor('input')
            +inputColor($lg)

    &-xl[type="color"]
        +elementConstructor('input')
            +inputColor($xl)

    &-xxl[type="color"]
        +elementConstructor('input')
            +inputColor($xxl)

    +presetConstructor('input')
    

// Input Image

.leto-input

    &[type="image"]
        +inputImage()

    
// Range

.leto-input // NOT USED

    &[type=range]
        +range($standardSize)


// Input File

.leto-file // NOT USED
    +inputFile($standardSize)  

// Search

.leto-input
    
    &[type="search"]
        +elementConstructor('search')
            +search($standardSize)

    &-xxs[type="search"]
        +elementConstructor('search')
            +search($xxs)

    &-xs[type="search"]
        +elementConstructor('search')
            +search($xs)

    &-sm[type="search"]
        +elementConstructor('search')
            +search($sm)

    &-md[type="search"]
        +elementConstructor('search')
            +search($md)

    &-lg[type="search"]
        +elementConstructor('search')
            +search($lg)

    &-xl[type="search"]
        +elementConstructor('search')
            +search($xl)

    &-xxl[type="search"]
        +elementConstructor('search')
            +search($xxl)

    +presetConstructor('search')


// Textarea

textarea[class*="leto-input"], .leto-textarea
    +elementConstructor('textarea')
        +textarea()

    +presetConstructor('textarea')


// Select

select.leto-input
    +elementConstructor('select')
        +select($standardSize)

    &-xxs
        +elementConstructor('select')
            +select($xxs)

    &-xs
        +elementConstructor('select')
            +select($xs)

    &-sm
        +elementConstructor('select')
            +select($sm)

    &-md
        +elementConstructor('select')
            +select($md)

    &-lg
        +elementConstructor('select')
            +select($lg)

    &-xl
        +elementConstructor('select')
            +select($xl)

    &-xxl
        +elementConstructor('select')
            +select($xxl)

    +presetConstructor('select')

// Table

.leto-table
    +table()


// Wrapper

.leto-wrapper // Not Used
    flex-direction: column
    display: inline-flex


// Header 
    
.leto-header // Not Used
    font-weight: $fontWeightMedium
    align-items: center
    flex-direction: row
    display: flex


// Image

.leto-image

    &-full
        max-height: auto
        width: 100%


// Pile

.leto-pile
    +elementConstructor('pile')
        margin: $basicMargin
        padding: $basicPadding
        flex-direction: column
        display: flex

        > *
            display: block

        &-empty // NOT USED
            min-width: 300px
            width: 100%
            padding: $basicPadding
            display: block

    +presetConstructor('pile')

// Form
 
.leto-form
    +elementConstructor('form')
        position: fixed
        width: calc(100% - #{$basicPadding})
        height: 100%
        top: 0
        left: 0
        padding: $basicPadding
        flex-direction: column
        display: flex
        overflow-y: scroll
        z-index: 2

    &-left
        +elementConstructor('form')
            position: fixed
            width: calc(100% - #{$basicPadding})
            height: 100%
            top: 0
            left: 0
            padding: $basicPadding
            flex-direction: column
            display: flex
            overflow-y: scroll
            z-index: 2

    &-right
        +elementConstructor('form')
            position: fixed
            width: calc(100% - #{$basicPadding})
            height: 100%
            top: 0
            right: 0
            padding: $basicPadding
            flex-direction: column
            display: flex
            overflow-y: scroll
            z-index: 2

    +presetConstructor('form')

    @media (min-width: $pc)
        width: 50vw
        left: 50%
        margin-left: -25vw

        &-left, &-right
            width: 50vw


// Backdrop

.leto-backdrop
    position: fixed
    left: 0
    top: 0
    display: block
    height: 100%
    width: 100%
    background-color: rgba(0, 0, 0, .25)
    z-index: 1


// Toast

.leto-toast
    +toastPos($toastColor, $colorWhite)

.leto-toast-success
    +toastPos($colorGreen, $colorBlack)

.leto-toast-warning
    +toastPos($colorOrange, $colorBlack)

.leto-toast-error
    +toastPos($colorRed, $colorBlack)