@import '_elements-mixins.sass'

// Elements

// Bubble

.leto-bubble
    +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, 100%)
        +bubble($standardSize)
    
    &-xxs
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, 100%)
            +bubble($xxs)

    &-xs
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, 100%)
            +bubble($xs)

    &-sm
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, 100%)
            +bubble($sm)

    &-md
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, 100%)
            +bubble($md)

    &-lg
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, 100%)
            +bubble($lg)

    &-xl
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, 100%)
            +bubble($xl)

    &-xxl
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, 100%)
            +bubble($xxl)


// Bubble wrapper

.leto-bubble-wrapper
    +bubbleWrapper($md)

    &-xxs
        +bubbleWrapper($xxs)
        
    &-xs
        +bubbleWrapper($xs)

    &-sm
        +bubbleWrapper($sm)

    &-md
        +bubbleWrapper($md)
        
    &-lg
        +bubbleWrapper($lg)

    &-xl
        +bubbleWrapper($xl)

    &-xxl
        +bubbleWrapper($xxl)


// Card

.leto-card
    +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)
        +cardAutoWidth()

    &-xxs    
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)
            +card($xxs)

    &-xs
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)
            +card($xs)

    &-sm
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)
            +card($sm) 

    &-md
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)
            +card($md)

    &-lg
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)
            +card($lg)

    &-xl
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)
            +card($xl)

    &-xxl
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)
            +card($xxl) 

    &-square
        +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness) 
            +cardSquare($md)

        &-xxs      
            +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)  
                +cardSquare($xxs)

        &-xs
            +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)  
                +cardSquare($xs)

        &-sm
            +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)  
                +cardSquare($sm)

        &-md
            +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)  
                +cardSquare($md)

        &-lg
            +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)  
                +cardSquare($lg)

        &-xl
            +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)  
                +cardSquare($xl)

        &-xxl
            +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, $standardRoundness)  
                +cardSquare($xxl) 


// Card wrapper

.leto-card-wrapper
    +cardWrapper($md)


// Button

.leto-button 
    +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
        +button($standardSize)

    &-xxs
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +button($xxs)

    &-xs
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +button($xs)

    &-sm
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +button($sm)

    &-md
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +button($md)

    &-lg
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +button($lg)

    &-xl
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +button($xl)

    &-xxl
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +button($xxl)

    &-full
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +buttonFull($standardSize)

        &-xxs
            +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
                +buttonFull($xxs)

        &-xs
            +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
                +buttonFull($xs)

        &-sm
            +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
                +buttonFull($sm)

        &-md
            +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
                +buttonFull($md)

        &-lg
            +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
                +buttonFull($lg)

        &-xl
            +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
                +buttonFull($xl)

        &-xxl
            +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
                +buttonFull($xxl)


// Badge

.leto-badge
    +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
        +badge($standardSize)

    &-xxs
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +badge($xxs)

    &-xs
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +badge($xs)

    &-sm
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +badge($sm)

    &-md
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +badge($sm)

    &-lg
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +badge($lg)

    &-xl
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +badge($xl)

    &-xxl
        +elementConstructor($colorWhite, $colorBlack, 1px, $colorGrey, 128px)
            +badge($xxl)


// Input

.leto-input
    +input($md)

    &-xxs
        +input($xxs)

    &-xs
        +input($xs)

    &-sm
        +input($sm)

    &-md
        +input($md)

    &-lg
        +input($lg)

    &-xl
        +input($xl)

    &-xxl
        +input($xxl)


// Input wrapper

.leto-input-wrapper
    position: relative
    margin: $basicMargin

    label
        position: absolute 
        background-color: $colorWhite
        font-size: $fontSizeSM
        font-weight: $fontWeightMedium
        top: -10px
        left: $basicPadding
        padding-left: $basicPadding
        padding-right: $basicPadding

    [class*=leto-input]
        width: 100%
        border: 1px solid $colorLightGrey
        margin: 0

    [class*=leto-input]:focus::placeholder
        opacity: 0

    [class*=leto-input]:focus ~ label
        opacity: 1

    [class*=leto-input]:focus
        background-color: transparent
        border: 1px solid $colorDarkGrey

    > i
        position: absolute
        top: 50%
        margin-top: -8px
        right: 8px

    > select[class*=leto-input]
        appearance: none

        &::-ms-expand
            display: none


// Search

.leto-search
    +search($md)

    &-xxs
        +search($xxs)

    &-xs
        +search($xs)

    &-sm
        +search($sm)

    &-md
        +search($md)

    &-lg
        +search($lg)

    &-xl
        +search($xl)

    &-xxl
        +search($xxl)


// Textarea

textarea[class*="leto-input"], .leto-textarea
    +textarea()


// Select

select.leto-input
    +select($md)

    &-xxs
        +select($xxs)

    &-xs
        +select($xs)

    &-sm
        +select($sm)

    &-md
        +select($md)

    &-lg
        +select($lg)

    &-xl
        +select($xl)

    &-xxl
        +select($xxl)


// Table

.leto-table
    border-collapse: separate
    border-spacing: 0 15px
    width: 100%

    th
        font-weight: $fontWeightBold
        text-align: left

    .leto-table-header

    td, th
        padding-left: $sm

    tr:not(.leto-table-header)

        td
            padding: $sm

    tr:not(.leto-table-header)

        td
            border-top: 1px solid $colorGrey
            border-bottom: 1px solid $colorGrey

    tr:not(.leto-table-header)

        td:first-child
            border-left: 1px solid $colorGrey
            border-top-left-radius: $xs
            border-bottom-left-radius: $xs

        td:last-child
            border-right: 1px solid $colorGrey
            border-top-right-radius: $xs
            border-bottom-right-radius: $xs


// Wrapper

.leto-wrapper // Not Used
    flex-direction: column
    display: inline-flex


// Header 
    
.leto-header // Not Used
    font-weight: $fontWeightMedium
    align-items: center
    flex-direction: row
    display: flex


// Image

.leto-image

    &-full
        max-height: auto
        width: 100%


// Pile

.leto-pile
    +elementConstructor(transparent, $colorBlack, 1px, $colorGrey, 12px)
        margin: $basicMargin
        padding: $basicPadding
        flex-direction: column
        display: flex

        > *
            display: block

        &-empty // NOT USED
            min-width: 300px
            width: 100%
            padding: $basicPadding
            display: block


// Form
 
.leto-form
    +elementConstructor($colorWhite, $colorBlack, 0, $colorGrey, 0)
        position: fixed
        width: calc(100% - #{$basicPadding})
        height: 100%
        top: 0
        left: 0
        padding: $basicPadding
        flex-direction: column
        display: flex
        overflow-y: scroll
        z-index: 2

    &-left
        +elementConstructor($colorWhite, $colorBlack, 0, $colorGrey, 0)
            position: fixed
            width: calc(100% - #{$basicPadding})
            height: 100%
            top: 0
            left: 0
            padding: $basicPadding
            flex-direction: column
            display: flex
            overflow-y: scroll
            z-index: 2

    &-right
        +elementConstructor($colorWhite, $colorBlack, 0, $colorGrey, 0)
            position: fixed
            width: calc(100% - #{$basicPadding})
            height: 100%
            top: 0
            right: 0
            padding: $basicPadding
            flex-direction: column
            display: flex
            overflow-y: scroll
            z-index: 2

    @media (min-width: $pc)
        width: 50vw
        left: 50%
        margin-left: -25vw

        &-left, &-right
            width: 50vw


// Backdrop

.leto-backdrop
    position: fixed
    left: 0
    top: 0
    display: block
    height: 100%
    width: 100%
    background-color: rgba(0, 0, 0, .25)
    z-index: 1


// Toast

=toastPos($bgColor, $textColor)
    +toast($bgColor, $textColor)
    left: 50%
    bottom: 20px
    margin-left: -125px

    &-left-top
        +toast($bgColor, $textColor)
        left: 20px
        top: 20px

    &-center-top
        +toast($bgColor, $textColor)
        left: 50%
        top: 20px
        margin-left: -125px

    &-right-top
        +toast($bgColor, $textColor)
        right: 20px
        top: 20px

    &-left-center
        +toast($bgColor, $textColor)
        left: 20px
        top: 50%
        margin-top: -37.5px

    &-center
        +toast($bgColor, $textColor)
        left: 50%
        top: 50%
        margin-top: -37.5px
        margin-left: -125px

    &-right-center
        +toast($bgColor, $textColor)
        right: 20px
        top: 50%
        margin-top: -37.5px

    &-left-bottom
        +toast($bgColor, $textColor)
        left: 20px
        bottom: 20px

    &-center-bottom
        +toast($bgColor, $textColor)
        left: 50%
        bottom: 20px
        margin-left: -125px

    &-right-bottom
        +toast($bgColor, $textColor)
        right: 20px
        bottom: 20px

.leto-toast
    +toastPos($colorBlack, $colorWhite)

.leto-toast-success
    +toastPos($colorGreen, $colorBlack)

.leto-toast-warning
    +toastPos($colorOrange, $colorBlack)

.leto-toast-error
    +toastPos($colorRed, $colorBlack)