@import '_variables.sass'
@import '_elements-variables.sass'
@import '_white-lists.sass'
@import '_theme-functions.scss'


// Elements base mixins
    
=basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius)
    border-width: $borderWidth
    border-style: solid
    border-radius: $borderRadius

    @if $bgColor != $lightModeBgColor
       background: $bgColor 

    @if $color != $lightModeColor
       color: $color

    @if $borderColor != $lightModeColor
        border-color: $borderColor

=basicElementColors($bgColor, $color, $borderColor)
    background: $bgColor 
    color: $color
    border-color: $borderColor

=elementThemeColors($elementName)
    $bgColor: getElementAttrVal($elementName, 'bg');
    $color: getElementAttrVal($elementName, 'color');
    $borderColor: getElementAttrVal($elementName, 'borderColor');

    @if $bgColor == $lightModeBgColor
        +themed() 
            background: t('bg')

    @if $color == $lightModeColor
        +themed() 
            color: t('text')

    @if $borderColor == $lightModeColor
        +themed() 
            border-color: t('text')

// Presets

=preset($bgColor, $color, $borderWidth, $borderColor, $borderRadius)
    +basicElementColors($bgColor, $color, $borderColor)
    
    @media (min-width: $tablet)

        &-tablet
            +basicElementColors($bgColor, $color, $borderColor)

    @media (min-width: $tabletAndPC)

        &-tablet-pc
            +basicElementColors($bgColor, $color, $borderColor)

    @media (min-width: $tabletAndPC) and ($touchDevice)

        &-tablet-pc
            +basicElementColors($bgColor, $color, $borderColor)

    @media (min-width: $pc)

        &-pc
            +basicElementColors($bgColor, $color, $borderColor)

    @media (min-aspect-ratio: $ultrawideRatio) and (min-width: $ultrawide)

        &-ultrawide
            +basicElementColors($bgColor, $color, $borderColor)

    @media (min-aspect-ratio: $superUltrawideRatio) and (min-width: $ultrawide)
        
        &-super-ultrawide
            +basicElementColors($bgColor, $color, $borderColor)

=presetConstructor($elementName)
    $bgColor: getElementAttrVal($elementName, 'bg');
    $color: getElementAttrVal($elementName, 'color');
    $borderWidth: getElementAttrVal($elementName, 'borderWidth');
    $borderColor: getElementAttrVal($elementName, 'borderColor');
    $borderRadius: getElementAttrVal($elementName, 'borderRadius');

    @if checkElementPresetsList($elementName)
        &-white
            +preset(transparent, $colorWhite, 1px, $colorWhite, $borderRadius)

        &-dark-white
            +preset(transparent, $colorDarkWhite, 1px, $colorDarkWhite, $borderRadius)

        &-grey
            +preset(transparent, $colorGrey, 1px, $colorGrey, $borderRadius)

        &-light-grey
            +preset(transparent, $colorLightGrey, 1px, $colorLightGrey, $borderRadius)

        &-lighter-grey
            +preset(transparent, $colorLighterGrey, 1px, $colorLighterGrey, $borderRadius)

        &-dark-grey
            +preset(transparent, $colorDarkGrey, 1px, $colorDarkGrey, $borderRadius)

        &-darker-grey
            +preset(transparent, $colorDarkerGrey, 1px, $colorDarkerGrey, $borderRadius)

        &-yellow
            +preset(transparent, $colorYellow, 1px, $colorYellow, $borderRadius)

        &-light-yellow
            +preset(transparent, $colorLightYellow, 1px, $colorLightYellow, $borderRadius)

        &-dark-yellow
            +preset(transparent, $colorDarkYellow, 1px, $colorDarkYellow, $borderRadius)

        &-orange
            +preset(transparent, $colorOrange, 1px, $colorOrange, $borderRadius)

        &-light-orange
            +preset(transparent, $colorLightOrange, 1px, $colorLightOrange, $borderRadius)

        &-dark-orange
            +preset(transparent, $colorDarkOrange, 1px, $colorDarkOrange, $borderRadius)

        &-red
            +preset(transparent, $colorRed, 1px, $colorRed, $borderRadius)

        &-light-red
            +preset(transparent, $colorLightRed, 1px, $colorLightRed, $borderRadius)

        &-dark-red
            +preset(transparent, $colorDarkRed, 1px, $colorDarkRed, $borderRadius)

        &-purple
            +preset(transparent, $colorPurple, 1px, $colorPurple, $borderRadius)

        &-light-purple
            +preset(transparent, $colorLightPurple, 1px, $colorLightPurple, $borderRadius)

        &-dark-purple
            +preset(transparent, $colorDarkPurple, 1px, $colorDarkPurple, $borderRadius)

        &-blue
            +preset(transparent, $colorBlue, 1px, $colorBlue, $borderRadius)           

        &-light-blue
            +preset(transparent, $colorLightBlue, 1px, $colorLightBlue, $borderRadius)          

        &-dark-blue
            +preset(transparent, $colorDarkBlue, 1px, $colorDarkBlue, $borderRadius)           

        &-mint
            +preset(transparent, $colorMint, 1px, $colorMint, $borderRadius)          

        &-light-mint
            +preset(transparent, $colorLightMint, 1px, $colorLightMint, $borderRadius)          

        &-dark-mint
            +preset(transparent, $colorDarkMint, 1px, $colorDarkMint, $borderRadius)
                
        &-mint
            +preset(transparent, $colorGreen, 1px, $colorGreen, $borderRadius)
                
        &-light-mint
            +preset(transparent, $colorLightGreen, 1px, $colorLightGreen, $borderRadius)
                
        &-dark-mint
            +preset(transparent, $colorDarkGreen, 1px, $colorDarkGreen, $borderRadius)
            

// Element constructor

=elementConstructor($elementName)
    $bgColor: getElementAttrVal($elementName, 'bg');
    $color: getElementAttrVal($elementName, 'color');
    $borderWidth: getElementAttrVal($elementName, 'borderWidth');
    $borderColor: getElementAttrVal($elementName, 'borderColor');
    $borderRadius: getElementAttrVal($elementName, 'borderRadius');
    
    @content
    +basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius)
    
    @if checkElementMQList($elementName)
        @media (min-width: $tablet)

            &-tablet
                @content
                +basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius)

        @media (min-width: $tabletAndPC)

            &-tablet-pc
                @content
                +basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius)

        @media (min-width: $tabletAndPC) and ($touchDevice)

            &-tablet-pc
                @content
                +basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius)

        @media (min-width: $pc)

            &-pc
                @content
                +basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius)

        @media (min-aspect-ratio: $ultrawideRatio) and (min-width: $ultrawide)

            &-ultrawide
                @content
                +basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius)

        @media (min-aspect-ratio: $superUltrawideRatio) and (min-width: $ultrawide)
            
            &-super-ultrawide
                @content
                +basicElementStyles($bgColor, $color, $borderWidth, $borderColor, $borderRadius)


// Elements mixins

// Bubble

=bubble($value)
    height: $value * 2.5
    width: $value * 2.5
    font-size: $value * 0.75
    text-align: center
    margin: $basicMargin
    flex-direction: column
    align-items: center
    justify-content: center
    flex-shrink: 0
    display: inline-flex

    img
        max-width: $value * 0.75


// Bubble wrapper

=bubbleWrapper($value)
    width: $value * 2.5
    margin: $basicMargin
    justify-content: center
    flex-direction: column
    display: inline-flex

    > .leto-bubble
        height: $value * 2.5
        width: $value * 2.5
        font-size: $value * .75
        border-radius: $value * 2.5

        img
            max-width: $value * .75 

    > [class*=leto-bubble]
        margin-top: 0
        margin-left: auto
        margin-right: auto
        margin-bottom: 0

    > label
        text-align: center

    > [class*=leto-bubble] ~ label
        margin-top: $basicMargin

    > label ~ [class*=leto-bubble]
        margin-top: $basicMargin


// Card

=card($value)
    position: relative
    width: $value*10
    min-height: 50px
    border: 1px solid $colorGrey
    border-radius: 12px
    margin: $basicMargin
    padding: $basicPadding
    flex-direction: column
    display: inline-flex
    overflow: hidden

    > .leto-image-full
        margin-top: -$basicMargin
        margin-left: -$basicMargin
        margin-right: -$basicMargin
        width: calc(100% + 16px)

=cardAutoWidth()
    position: relative
    min-height: 50px
    margin: $basicMargin
    padding: $basicPadding
    flex-direction: column
    display: inline-flex
    overflow: hidden

    > .leto-image-full
        margin-top: -$basicMargin
        margin-left: -$basicMargin
        margin-right: -$basicMargin
        width: calc(100% + 16px)

=cardSquare($value)
    position: relative
    width: $value*10
    height: $value*10
    margin: $basicMargin
    flex-direction: column
    display: inline-flex
    overflow: hidden 

    > .leto-image-full
        margin-top: -$basicMargin
        margin-left: -$basicMargin
        margin-right: -$basicMargin
        width: calc(100% + 16px)


// Card wrapper

=cardWrapper($value)
    margin: $basicMargin
    justify-content: center
    flex-direction: column
    display: inline-flex

    > [class*=leto-card]
        margin-top: 0
        margin-left: auto
        margin-right: auto
        margin-bottom: 0

    > label
        text-align: center

    > [class*=leto-card] ~ label
        margin-top: $basicMargin

    > label ~ [class*=leto-card]
        margin-top: $basicMargin    


// Button

=button($value)
    height: $value * 2
    text-decoration: none
    margin: $basicMargin
    padding: $basicPadding $basicPadding * 2
    justify-content: center
    align-items: center
    cursor: pointer
    display: inline-flex

    > *
        margin: 0
        margin-right: $basicMargin / 2

    > *:last-child
        margin-right: 0


=buttonFull($value)
    width: 100%
    height: $value * 2
    text-decoration: none
    margin: $basicMargin
    padding: $basicPadding $basicPadding * 2
    justify-content: center
    align-items: center
    cursor: pointer
    display: inline-flex

    > *
        margin: 0
        margin-right: $basicMargin / 2

    > *:last-child
        margin-right: 0


// Badge

=badge($value)
    height: $value
    font-size: $fontSizeXS
    padding: $xxs $xs
    margin: $basicMargin
    white-space: nowrap
    align-items: center
    display: inline-flex

    > *
        margin: 0
        margin-right: $basicMargin / 2

    > *:last-child
        margin-right: 0


// Input

=input($height)
    height: $height * 2
    font-size: $fontSizeMD
    margin: $basicMargin
    padding: $basicPadding $basicPadding * 2

    &:focus
        background-color: $colorLightGrey
        border-color: $colorLightGrey


// Input Wrapper

=inputWrapper()
    position: relative
    margin: $basicMargin

    label
        position: absolute
        +themed()  
            background-color: t('bg')
        font-size: $fontSizeSM
        font-weight: $fontWeightMedium
        top: -10px
        left: $basicPadding
        padding-left: $basicPadding
        padding-right: $basicPadding

    [class*=leto-input]
        width: 100%
        border: 1px solid $colorLightGrey
        margin: 0

    [class*=leto-input]:focus::placeholder
        opacity: 0

    [class*=leto-input]:focus ~ label
        opacity: 1

    [class*=leto-input]:focus
        background-color: transparent
        border: 1px solid $colorDarkGrey

    > i
        position: absolute
        top: 50%
        margin-top: -8px
        right: 8px

    > select[class*=leto-input]
        appearance: none

        &::-ms-expand
            display: none


// Input Radio

=inputRadio($size)
    $bgColor: getElementAttrVal('radio', 'bg')
    $multiplier: getElementAttrVal('radio', 'multiplier')
    $color: getElementAttrVal('radio', 'color')
    $borderColor: getElementAttrVal('radio', 'borderColor')
    
    position: relative
    width: $size * $multiplier
    height: $size * $multiplier
    cursor: pointer
    margin: calc((#{$size} * #{ $multiplier}) / 2 + #{$basicMargin})

    &:before, &:after
        position: absolute
        content: ''

    &:before
        width: 200%
        height: 200%
        @if $bgColor == $lightModeBgColor
            background-color: $darkModeBgColor
        @else
            background-color: $lightModeBgColor   
        border: 1px solid $borderColor
        border-radius: 100%
        margin: calc(-1 * (#{$size} * #{ $multiplier}) / 2)

    &:after
        width: calc(200% - 16px)
        height: calc(200% - 16px)
        border-radius: 100%
        margin: calc(#{$basicMargin} - (#{$size} * #{ $multiplier}) / 2)

    &:checked
        
        &:after  
            background: $bgColor


// Input Checkbox

=inputCheckbox($size)
    $bgColor: getElementAttrVal('checkbox', 'bg')
    $multiplier: getElementAttrVal('checkbox', 'multiplier')
    $color: getElementAttrVal('checkbox', 'color')
    $borderColor: getElementAttrVal('checkbox', 'borderColor')
    
    position: relative
    width: $size * $multiplier
    height: $size * $multiplier
    cursor: pointer
    margin: calc((#{$size} * #{ $multiplier}) / 2 + #{$basicMargin})

    &:before, &:after
        position: absolute
        content: ''

    &:before
        width: 200%
        height: 200%
        @if $bgColor == $lightModeBgColor
            background-color: $darkModeBgColor
        @else
            background-color: $lightModeBgColor   
        border: 1px solid $borderColor
        border-radius: 100%
        margin: calc(-1 * (#{$size} * #{ $multiplier}) / 2)

    &:after
        width: calc(200% - 16px)
        height: calc(200% - 16px)
        border-radius: 100%
        margin: calc(#{$basicMargin} - (#{$size} * #{ $multiplier}) / 2)

    &:checked
        
        &:after  
            background: $bgColor


// Input Color

=inputColor($height)
    $multiplier: getElementAttrVal('input', 'multiplier')
    height: $height * $multiplier
    margin: $basicMargin
    padding: 4px

// Input Image

=inputImage()
    margin: $basicMargin

// Range

=range($height)
    background: transparent
    height: 48px
    -webkit-appearance: none
    margin: 10px 0
    width: 100%

    &:focus
        outline: none

    &::-webkit-slider-runnable-track
        width: 100%
        height: 10px
        cursor: pointer
        animate: 0.2s
        box-shadow: 0px 0px 0px #000000
        background: $colorGrey
        border-radius: 6px
        border: 0px solid #000000

    &::-webkit-slider-thumb
        box-shadow: 0px 0px 0px #FFFFFF
        border: 2px solid #FFFFFF
        height: 40px
        width: 20px
        border-radius: 50px
        background: $colorDarkerGrey
        cursor: pointer
        -webkit-appearance: none
        margin-top: -16px

    &:focus::-webkit-slider-runnable-track
        background: $colorGrey

    &::-moz-range-track
        width: 100%
        height: 10px
        cursor: pointer
        animate: 0.2s
        box-shadow: 0px 0px 0px #000000
        background: $colorGrey
        border-radius: 6px
        border: 0px solid #000000

    &::-moz-range-thumb
        box-shadow: 0px 0px 0px #FFFFFF
        border: 2px solid #FFFFFF
        height: 40px
        width: 20px
        border-radius: 50px
        background: $colorDarkerGrey
        cursor: pointer

    &::-ms-track
        width: 100%
        height: 10px
        cursor: pointer
        animate: 0.2s
        background: transparent
        border-color: transparent
        color: transparent

    &::-ms-fill-lower, &::-ms-fill-upper
        background: $colorGrey
        border: 0px solid #000000
        border-radius: 12px
        box-shadow: 0px 0px 0px #000000

    &::-ms-thumb
        margin-top: 1px
        box-shadow: 0px 0px 0px #FFFFFF
        border: 2px solid #FFFFFF
        height: 40px
        width: 20px
        border-radius: 50px
        background: $colorDarkerGrey
        cursor: pointer

    &:focus
        &::-ms-fill-lower, &::-ms-fill-upper
        background: $colorGrey


// Input File Wrapper

=inputFile($height)    
    margin: $basicMargin
    align-items: center
    display: flex
    cursor: pointer

    input[type="file"]
        width: 200px
        height: $height * 2
        opacity: 0
        cursor: pointer

    label
        position: absolute
        margin-left: 210px
        color: $colorWhite
        align-items: center
        display: flex
        cursor: pointer

    label:before
        position: absolute
        content: ''
        width: 200px
        height: $height * 2
        border: 1px solid $colorWhite
        border-radius: 128px
        margin-left: -210px
        cursor: pointer

    label:after
        position: absolute
        content: 'Upload file'
        width: 200px
        height: $height * 2
        color: $colorWhite
        margin-left: -210px
        top: 0
        left: 0
        justify-content: center
        display: flex
        cursor: pointer


// Search

=search($height)
    height: $height * 2
    font-size: $fontSizeMD
    margin: $basicMargin
    padding: $basicPadding $basicPadding * 2

    &:focus
        background-color: transparent
        border-color: $colorGrey

// Textarea

=textarea()
    height: auto
    font-size: $fontSizeMD
    margin: $basicMargin
    padding: $basicPadding $basicPadding * 2

    &:focus
        background-color: $colorLightGrey
        border-color: $colorLightGrey


// Select

=select($height)
    height: $height * 2
    font-size: $fontSizeMD
    margin: $basicMargin
    padding: $basicPadding $basicPadding * 3 $basicPadding $basicPadding * 2
    cursor: pointer

    & option 
        background-color: $colorLightGrey
        outline: 0


    &:focus
        background-color: $colorWhite
        border: 1px solid $colorGrey
        border-radius: 12px 12px 0 0

        &::-ms-value
            background-color: transparent


// Table

=table()
    border-collapse: separate
    border-spacing: 0 15px
    width: 100%
    +themed() 
        color: t('text')

    th
        font-weight: $fontWeightBold
        text-align: left

    .leto-table-header

    td, th
        padding-left: $sm

    tr:not(.leto-table-header)

        td
            padding: $sm

    tr:not(.leto-table-header)

        td
            border-top: 1px solid $colorGrey
            border-bottom: 1px solid $colorGrey

    tr:not(.leto-table-header)

        td:first-child
            border-left: 1px solid $colorGrey
            border-top-left-radius: $xs
            border-bottom-left-radius: $xs

        td:last-child
            border-right: 1px solid $colorGrey
            border-top-right-radius: $xs
            border-bottom-right-radius: $xs

// Toast

=toast($bgColor, $textColor)
    position: fixed
    background-color: $bgColor
    min-width: 200px
    max-width: 400px
    min-height: 50px
    max-height: 100px
    color: $textColor
    border-radius: 12px
    padding: $basicPadding
    align-items: center
    justify-content: center
    display: flex
    z-index: 21

=toastPos($bgColor, $textColor)
    +toast($bgColor, $textColor)
    left: 50%
    bottom: 20px
    margin-left: -125px

    &-left-top
        +toast($bgColor, $textColor)
        left: 20px
        top: 20px

    &-center-top
        +toast($bgColor, $textColor)
        left: 50%
        top: 20px
        margin-left: -125px

    &-right-top
        +toast($bgColor, $textColor)
        right: 20px
        top: 20px

    &-left-center
        +toast($bgColor, $textColor)
        left: 20px
        top: 50%
        margin-top: -37.5px

    &-center
        +toast($bgColor, $textColor)
        left: 50%
        top: 50%
        margin-top: -37.5px
        margin-left: -125px

    &-right-center
        +toast($bgColor, $textColor)
        right: 20px
        top: 50%
        margin-top: -37.5px

    &-left-bottom
        +toast($bgColor, $textColor)
        left: 20px
        bottom: 20px

    &-center-bottom
        +toast($bgColor, $textColor)
        left: 50%
        bottom: 20px
        margin-left: -125px

    &-right-bottom
        +toast($bgColor, $textColor)
        right: 20px
        bottom: 20px